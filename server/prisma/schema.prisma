// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  username         String         @unique
  password         String
  email            String         @unique
  firstname        String
  lastname         String
  profilePic       String
  conversationId   String[]       @db.ObjectId
  messagesSent     Message[]      @relation(name: "sender")
  messagesReceived Message[]      @relation(name: "receiver")
  conversation     Conversation[] @relation(fields: [conversationId], references: [conversationId])
}

model Message {
  messageId      String         @id @default(auto()) @map("_id") @db.ObjectId
  body           String
  senderId       String         @db.ObjectId
  receiverId     String         @db.ObjectId
  conversationId String[]       @db.ObjectId
  createdAt      DateTime       @default(now())
  sender         User           @relation(name: "sender", fields: [senderId], references: [id])
  receiver       User           @relation(name: "receiver", fields: [receiverId], references: [id])
  conversation   Conversation[] @relation(fields: [conversationId], references: [conversationId])
}

model Conversation {
  conversationId String    @id @default(auto()) @map("_id") @db.ObjectId
  participantsId String[]  @db.ObjectId
  messagesId     String[]  @db.ObjectId
  createdAt      DateTime  @default(now())
  participants   User[]    @relation(fields: [participantsId], references: [id])
  messages       Message[] @relation(fields: [messagesId], references: [messageId])
}
